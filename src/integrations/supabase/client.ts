// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://wskiwwfgelypkrufsimz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Indza2l3d2ZnZWx5cGtydWZzaW16Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDIxNDQ4NjEsImV4cCI6MjA1NzcyMDg2MX0.xGojh6R7eyfpzfHTeaNvFCDCZwxqGDiGNJKulf4XYEc";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Set your MapBox public token here
// We'll fetch this dynamically from the Supabase edge function
export const MAPBOX_TOKEN = import.meta.env.VITE_MAPBOX_TOKEN || 'pending';

// Function to fetch the Mapbox token from our edge function
export const getMapboxToken = async (): Promise<string> => {
  try {
    // Try to use the token from environment if available
    if (import.meta.env.VITE_MAPBOX_TOKEN) {
      return import.meta.env.VITE_MAPBOX_TOKEN;
    }
    
    // Otherwise fetch from the edge function
    const { data, error } = await supabase.functions.invoke('get-mapbox-token');
    
    if (error) {
      console.error('Error fetching Mapbox token:', error);
      return '';
    }
    
    if (data && data.token) {
      return data.token;
    }
    
    return '';
  } catch (error) {
    console.error('Failed to fetch Mapbox token:', error);
    return '';
  }
};
